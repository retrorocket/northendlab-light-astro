---
import config from "@/config/config.json";
import Base from "@/layouts/Base.astro";
import Pagination from "@/layouts/components/Pagination.astro";
import Post from "@/layouts/partials/Post.astro";
import { getSinglePage } from "@/lib/contentParser.astro";
import { getTaxonomy } from "@/lib/taxonomyParser.astro";
import taxonomyFilter from "@/lib/utils/taxonomyFilter";
import { markdownify } from "@/lib/utils/textConverter";
import { Image } from "astro:assets";
import type { CollectionEntry } from "astro:content";
import { getEntry } from "astro:content";
const { pagination } = config.settings;

export async function getStaticPaths() {
  const categories = await getTaxonomy("posts", "categories");

  return categories.map((category) => {
    return {
      params: { category },
    };
  });
}

const { category } = Astro.params;
const homepage = (await getEntry(
  "homepage",
  "-index"
)) as CollectionEntry<"homepage">;
const { banner } = homepage.data;
const posts = await getSinglePage("posts");
const filterByTags = taxonomyFilter(posts, "categories", category);
const totalPages = Math.ceil(filterByTags.length / pagination);
---

<Base title={category as any}>
  <!-- Banner -->
  <section
    class="banner"
    style="background-image: url('/images/banner/banner-bg.svg')"
  >
    <div class="container">
      <div class="row">
        <div class="lg:col-6">
          {
            banner?.title && (
              <h1 set:html={markdownify(banner?.title)} class="h2 mb-8" />
            )
          }
        </div>
      </div>
      <div class="banner-illustration">
        {
          banner?.image && (
            <Image src={banner?.image} width={768} height={385} alt="" />
          )
        }
      </div>
    </div>
  </section>
  <!-- ./End Banner -->

  <div class="section">
    <div class="container">
      <div class="row px-3">
        <div class="mx-auto px-0 lg:col-8">
          <h1 class="h2 mb-8">
            Posts related to <span class="text-primary">{category}</span> category
          </h1>
          <div class="rounded px-9 py-12 shadow md:p-[60px]">
            {
              filterByTags
                .slice(0, pagination)
                .map((post) => <Post post={post} />)
            }
            <Pagination
              section={`categories/${category}`}
              currentPage={1}
              totalPages={totalPages}
            />
          </div>
        </div>
      </div>
    </div>
  </div>
</Base>
